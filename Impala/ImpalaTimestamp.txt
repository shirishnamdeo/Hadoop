https://impala.apache.org/docs/build/html/topics/impala_timestamp.html
https://docs.cloudera.com/documentation/enterprise/5-8-x/topics/impala_datetime_functions.html


------------------------------------------------------------------------------------------------------------------------------------------------------

TIMESTAMP Data Type

Range: 1400-01-01 to 9999-12-31
Out of range TIMESTAMP values are converted to NULL


Internally, the resolution of the time portion of a TIMESTAMP value is in nanoseconds.
In Impala, the TIMESTAMP data type holds a value of date and time. It can be decomposed into year, month, day, hour, minute and seconds fields, but 
with no time zone information available, it does not correspond to any specific point in time.




SELECT CAST(0 AS TIMESTAMP);              --> (1970-01-01 00:00:00) Epoch Time
SELECT CAST(1 AS TIMESTAMP);              --> (1970-01-01 00:00:01) Epoch Time + 1 Second
SELECT CAST(60 AS TIMESTAMP);             --> (1970-01-01 00:01:00) Epoch Time + 60 Seconds

SELECT CAST("2020-01-01" AS TIMESTAMP);  --> (2020-01-01 00:00:00) ISO formatted strings can be converted directly into Timestamp
SELECT CAST('08:30:00' as TIMESTAMP);    --> 08:30:00



SELECT CAST("01-01-2020" AS TIMESTAMP);  --> NULL  : Non ISO format will be CAST to NULL


SELECT FROM_TIMESTAMP(now(), 'yyyy-mm-dd hh:mm:ss'); -> 2021-01-01 00:00:00


SELECT now();                            --> (2019-11-07 12:12:53.636559000) : Time in NanoSeconds
SELECT current_timestamp();              --> Alisa of now(), both returns timestamt datatype.

SELECT typeof(now());                    --> TIMESTAMP



------------------------------------------------------------------------------------------------------------------------------------------------------

date_add(timestamp startdate, int days), date_add(timestamp startdate, interval_expression)

SELECT now() AS right_now, date_add(now(), 7) AS next_week;                    --> 2019-11-07 12:16:30.341783000 | 2019-11-14 12:16:30.341783000 |
SELECT now() AS right_now, date_add(now(), interval 3 weeks) AS in_3_weeks;    --> 2019-11-07 12:18:12.884973000 | 2019-11-28 12:18:12.884973000 |
SELECT now() AS right_now, date_add(now(), interval 6 hours) AS in_6_hours;    --> 2019-11-07 12:18:58.869761000 | 2019-11-07 18:18:58.869761000 |
SELECT now() + interval 2 days + interval 2 hours;                             --> 2019-11-09 14:34:47.206906000


SELECT date_add(CAST('2016-01-31' AS timestamp), interval 3 months) as 'april_31st';



------------------------------------------------------------------------------------------------------------------------------------------------------

Converting STRING type to TIMESTAMP


SELECT CAST('2001-01-09 01:05:01' AS TIMESTAMP)    --> One space character or letter 'T' can be used between the date part and the time part.
SELECT CAST('2001-01-09T01:05:01' AS TIMESTAMP) 
SELECT CAST('2001-01-09' AS TIMESTAMP);            --> TIME part is optional.



------------------------------------------------------------------------------------------------------------------------------------------------------

Date Time Operations

SELECT CAST('1966-07-30' as TIMESTAMP);
SELECT CAST('1985-09-25 17:45:30.005' as TIMESTAMP);
SELECT CAST('08:30:00' as TIMESTAMP);
SELECT HOUR('1970-01-01 15:30:00');         -- Succeeds, returns 15.
SELECT HOUR('1970-01-01 15:30');            -- Returns NULL because seconds field required.
SELECT HOUR('1970-01-01 27:30:00');         -- Returns NULL because hour value out of range.
SELECT DAYOFWEEK('2004-06-13');             -- Returns 1, representing Sunday.
SELECT DAYNAME('2004-06-13');               -- Returns 'Sunday'.
SELECT date_add('2004-06-13', 365);         -- Returns 2005-06-13 with zeros for hh:mm:ss fields.
SELECT DAY('2004-06-13');                   -- Returns 13.
SELECT datediff('1989-12-31','1984-09-01'); -- How many days between these 2 dates?
SELECT now();               

